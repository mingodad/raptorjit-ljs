
var bit = require("bit");
var band, bxor, rshift, rol = bit.band, bit.bxor, bit.rshift, bit.rol;

var function nsieve(p, m) {
  var count = 0;
  for( i=0,rshift(m, 5) ) { p[i] = -1; }
  for( i=2,m ) {
    if( band(rshift(p[rshift(i, 5)], i), 1) != 0 ) {
      ++count    ;
      for( j=i+i,m,i ) {
	var jx = rshift(j, 5);
	p[jx] = band(p[jx], rol(-2, j));
      }
    }
  }
  return count;
}

var N = tonumber(arg && arg[1]) || 1;
if( N < 2 ) { N = 2; }
var primes = {};

for( i=0,2 ) {
  var m = (2**(N-i))*10000;
  io.write(string.format("Primes up to %8d %8d\n", m, nsieve(primes, m)));
}
