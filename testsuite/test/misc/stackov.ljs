
var function f() {
  f();
}

var err, s = xpcall(f, debug.traceback);
assert(err == false);

var first = string.match(s, "[^\n]+");
var line = debug.getinfo(f, "S").linedefined+1;
assert(string.match(first, ":"..line..": stack overflow$"));

var n = 1;
for( _ in string.gmatch(s, "\n") ) { ++n    ; }
assert(n == 1+1+11+1+10);

var function g(i) {
  g(i);
}

err, s = xpcall(g, debug.traceback, 1);
assert(err == false);

/*
-- too slow
local function vtail(...)
  return vtail(1, ...)
end

local err, s = xpcall(vtail, debug.traceback, 1)
assert(err == false)
--*/

var function vcall(...) {
  vcall(1, ...);
}

err, s = xpcall(vcall, debug.traceback, 1);
assert(err == false);

