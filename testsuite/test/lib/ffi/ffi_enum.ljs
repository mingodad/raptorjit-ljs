
var ffi = require("ffi");

dofile("../common/ffi_util.inc");

ffi.cdef([=[
typedef enum enum_i { FOO_I = -1, II = 10 } enum_i;
typedef enum enum_u { FOO_U = 1, UU = 10 } enum_u;

enum_i call_ei_i(int a) asm("call_i");
enum_u call_eu_i(int a) asm("call_i");
int call_i_ei(enum_i a) asm("call_i");
int call_i_eu(enum_u a) asm("call_i");
]=]);

var C = ffi.load("../clib/ctest");

{

  var t = ffi.new("enum_i[100]");
  for( i=0,99 ) { t[i] = "II"; }
  for( i=0,99 ) { assert(t[i] == "II"); }
  for( i=0,99 ) { assert(t[i] >= "II"); }
  for( i=0,99 ) { t[i] = -10; }
  for( i=0,99 ) { assert(t[i] == -10); }
  for( i=0,99 ) { assert(t[i] != 2147483648); }
  for( i=1,99 ) { assert(t[i] == t[i-1]); }
  assert(t[0]+1 == -9);
  assert(t[0] != "BB");
  fails(function() { return t[0] > "BB"; });

  var u = ffi.new("enum_u[100]");
  for( i=0,99 ) { u[i] = "UU"; }
  for( i=0,99 ) { assert(u[i] == "UU"); }
  for( i=0,99 ) { assert(u[i] >= "UU"); }
  for( i=0,99 ) { u[i] = 4294967296-10; }
  for( i=0,99 ) { assert(u[i] == 4294967296-10); }
  for( i=0,99 ) { assert(u[i] != -10); }
  for( i=1,99 ) { assert(u[i] == u[i-1]); }
  assert(u[0]+1 == 4294967296-9);

  for( i=0,99 ) { assert(t[i] != u[i]); }
}

{
  for( i=0,99 ) { assert(C.call_ei_i(9) == "II"); }
  for( i=0,99 ) { assert(C.call_eu_i(9) == "UU"); }
  for( i=0,99 ) { assert(C.call_i_ei("II") == 11); }
  for( i=0,99 ) { assert(C.call_i_eu("UU") == 11); }
}

{
  var f = ffi.cast("bool (*)(enum_i)", function(e) { return e == "II"; });
  assert(f("II"));
  assert(! f(0));
}

