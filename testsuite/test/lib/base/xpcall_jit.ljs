var function tr(err) { return "tr"..err; }

{ //- square sum
  var function f(x) { return x*x; }
  var x = 0;
  for( i=1,100 ) {
    var ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, f, tr, i);
    if( ! ok1 || ! ok2 || ! ok3 ) { break; }
    x +=   y;
  }
  assert(x == 338350);
}

{ //- sqrt square sum
  var x = 0;
  for( i=1,100 ) {
    var ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, math.sqrt, tr, i*i);
    if( ! ok1 || ! ok2 || ! ok3 ) { break; }
    x +=   y;
  }
  assert(x == 5050);
}

{ //- sum with error
  var function f(x) {
    if( x >= 150 ) { error("test", 0); }
    return x; }
  var x = 0;
  for( i=1,200 ) {
    var ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, f, tr, i);
    if( ! ok1 || ! ok2 || ! ok3 ) {
      assert(ok1 && ok2 && ! ok3);
      assert(y == "trtest");
      break;
    }
    x +=   y;
  }
  assert(x == 11175);
}

{ //- square with error
  var function f(x) {
    if( x >= 150 ) { return x*x; }
    return x;
  }
  var x = 0;
  for( i=1,200 ) {
    var ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, f, tr, i);
    if( ! ok1 || ! ok2 || ! ok3 ) { break; }
    x +=   y;
  }
  assert(x == 1584100);
}

{ //- sum or square with error
  var function f(x) {
    if( x >= 150 ) {
      if( x >= 175 ) { error("test", 0); }
      return x*x;
    }
    return x;
  }
  var x = 0;
  for( i=1,200 ) {
    var ok1, ok2, ok3, y = xpcall(xpcall, tr, xpcall, tr, f, tr, i);
    if( ! ok1 || ! ok2 || ! ok3 ) {
      assert(ok1 && ok2 && ! ok3);
      assert(y == "trtest");
      // note: no break, so we get an exit to interpreter
    } else {
      x +=   y;
    }
  }
  assert(x == 668575);
}

{ //- xpcall swap after recorder error
  var x = 0;
  for( i=1,100 ) {
    var ok1, ok2, ok3, err = xpcall(xpcall, tr, xpcall, tr, error, tr, "test", 0);
    assert(ok1 && ok2 && ! ok3 && err == "trtest");
  }
}
